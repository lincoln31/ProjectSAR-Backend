# Server Configuration
server.port=8080

# Application Name
spring.application.name=conjunto-residencial-api

# Database Configuration (PostgreSQL)
# Asegúrate que 'conjunto_residencial_db' es el nombre de tu BD
# y que el usuario y contraseña son los correctos para tu instancia de PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/conjunto_residencial_db
spring.datasource.username=puniversidad
spring.datasource.password=Admin123
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Springdoc OpenAPI (Swagger UI) Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
# Ajusta 'com.conjuntoresidencial.api.infrastructure.web.controller' si tus controladores están en otro paquete
# o si tu paquete base es diferente. Si tu paquete base es com.conjuntoresidencial y los controllers están en
# com.conjuntoresidencial.infrastructure.web.controller, podrías usar solo com.conjuntoresidencial
springdoc.packages-to-scan=com.conjuntoresidencial.infrastructure.web.controller
springdoc.paths-to-match=/**spring.application.name=conjunto-residencial-api
spring.jpa.open-in-view=false


# JWT Configuration
# IMPORTANTE: Cambia esta clave secreta en producción. Debe ser una cadena larga y aleatoria en Base64.
# Puedes generar una con: new String(Base64.getEncoder().encode(SecureRandom.getSeed(64)))
# O usar un generador online de claves seguras (asegúrate que sea Base64 y suficientemente larga)
app.jwt.secret================================MiClaveSecretaSuperLargaYComplejaEnBase64ParaHS512====================================
app.jwt.expiration-ms=3600000 
app.jwt.refresh-token.expiration-ms=86400000 


# Niveles de Log Generales
logging.level.root=INFO 

# Nivel específico para tus clases JWT (para ver DEBUG e INFO)
logging.level.com.conjuntoresidencial.api.infrastructure.security.jwt.JwtAuthenticationFilter=DEBUG
logging.level.com.conjuntoresidencial.api.infrastructure.security.jwt.JwtTokenProvider=DEBUG

# Nivel para ver qué hace Spring Security (opcional, pero puede ser útil)
logging.level.org.springframework.security=INFO 